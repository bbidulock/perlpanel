README
======

PerlPanel is an attempt to build a useable, lean panel program (like Gnome's
gnome-panel and KDE's Kicker) in Perl, using Gtk2. There are several reasons for
this:

	1. I really enjoy programming with Gtk and Perl. It's neat.
	2. Using a popular language like Perl lowers the barrier to entry,
	   so a lot more people can contribute.
	3. It makes C purists go a funny shade of purple.
	4. Because there's nothing like it at the moment.
	5. Perl's built-in garbage collection and optimisation means that
	   it may well perform better on low-end systems than similar programs.

A few tenets:

	1. Everything is OO.
	2. Gnome is neat, but not everyone likes Gnome. So we avoid using it
	   and stick to pure Gtk.
	3. All config is stored in XML. See points 5 and 6 in the section below.
	4. Sane defaults. Not everyone wants a CPU/eth meter by default.
	5. Everything is subject to debate. If something is broken in the
	   panel/applet/config systems, then we can fix it. I can't imagine
	   a normal user will want to use PerlPanel for a long time, so breaking
	   compatability between versions is no problem.

A few wahs, or, TODO:

	1. There's no NetWM bindings for Perl, so we can't talk to the window
	   manager. This sucks. But it would take greater skills than mine to
	   create them.
	2. It is possible to work out the screen dimensions, using GdkScreen.
	   Unfortunately, there isn't yet a release of Gtk2-Perl that supports
	   GdkScreen objects, so we can't use it. The next release should have
	   support, so when that comes out, PerlPanel will be updated and the
	   "screen" section of the config file will be deprecated.
	3. At the moment the Panel is nothing more than a packing box in a popup
	   window that's been warped into a rectangle. This will probably raise
	   havoc with a lot of things. There's probably a way to do it
	   "properly" using Gdk but that's beyond my experience. Feel free to
	   correct this with a patch :-)
	4. No I18N yet.
	5. Currently Perl spits out loads of errors about uninitialized values
	   in Gtk2.pm, attempts to free unreferenced scalar, and so on. As far
	   as I can tell this is a problem with the Gtk2 libs themselves. I
	   suspect they will fix themselves in time.

--
$Id: README,v 1.5 2003/06/13 15:43:33 jodrell Exp $
